"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.query = void 0;
/**
 *
 * @param data data to send to the model, prompt
 * @param apiKey the api key to use to query the model
 * @returns the audio file generated by the model
 */
function query(data, apiKey) {
    return __awaiter(this, void 0, void 0, function* () {
        const response = yield fetch("https://api-inference.huggingface.co/models/facebook/musicgen-small", {
            headers: { Authorization: "Bearer " + apiKey },
            method: "POST",
            body: JSON.stringify(data),
        });
        const result = yield response.blob();
        return result;
    });
}
exports.query = query;
